openapi: 3.0.0
info:
    title: Monitor API
    version: 1.0.0
paths:
    /monitors:
        get:
            tags:
                - monitors
            summary: Retrieve all monitor configurations
            parameters:
                - name: include-status
                  in: query
                  description: Include current status information
                  required: false
                  schema:
                      type: boolean
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    oneOf:
                                        - $ref: '#/components/schemas/MonitorConfigurationWithId'
                                        - $ref: '#/components/schemas/MonitorConfigurationAndStatus'

        post:
            tags:
                - monitors
            summary: Create a new monitor configuration
            requestBody:
                description: Monitor configuration object
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MonitorConfiguration'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MonitorConfigurationWithId'
                400:
                    description: Bad request
    /monitors/test:
        post:
            tags:
                - monitors
            summary: Test a monitor on the Data Otter backend
            responses:
              200:
                description: New response
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/status'
    /monitors/{id}:
        get:
            tags:
                - monitors
            summary: Fetch a specific monitor with or without a status
            parameters:
              - in: path
                name: id
                description: Monitor id
                required: true
                schema:
                  type: integer
              - name: include-status
                in: query
                description: Include current status information
                required: false
                schema:
                    type: boolean
            description: Get a single monitor
            responses:
                200:
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -   $ref: '#/components/schemas/MonitorConfigurationWithId'
                                    -   $ref: '#/components/schemas/MonitorConfigurationAndStatus'
                404:
                    description: Monitor configuration not found
        put:
            tags:
                - monitors
            summary: Update a specific monitor
            parameters:
                -   in: path
                    name: id
                    description: Monitor id
                    required: true
                    schema:
                        type: integer
            requestBody:
                description: Monitor configuration object
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MonitorConfiguration'
            responses:
                200:
                    description: New response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MonitorConfigurationWithId"
                404:
                    description: Monitor configuration not found
        delete:
            tags:
                - monitors
            summary: Delete a specific monitor configuration
            parameters:
                -   in: path
                    name: id
                    description: Monitor id
                    required: true
                    schema:
                        type: integer
            responses:
                200:
                    description: Successful
                404:
                    description: Monitor configuration not found

    /monitors/{id}/history:
        get:
            summary: Get a history of statuses for a specific monitor
            parameters:
                -   in: path
                    name: id
                    description: Monitor id
                    required: true
                    schema:
                        type: integer
                -   in: query
                    name: end
                    description: Specifies an end date. If note included, will be set to the current time.
                    required: false
                    example: '2024-05-08 11:38:00'
                    schema:
                        type: string
                -   in: query
                    name: start
                    required: false
                    example: '2024-05-08 11:38:00'
                    description: Specifies a start date. If not included, will place this one week before the end date.
                -   in: query
                    name: condensed
                    required: false
                    schema:
                        type: boolean
                    description: Set to true if you want condensed data. This removes datapoints where the status is the same and only includes differing data points as well as the point right before.
            tags:
                - monitors
            responses:
                200:
                    description: Successful call
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/status"
                404:
                    description: Monitor configuration not found
    /nodes:
        post:
            tags:
                - nodes
            summary: Register a node to get its ID.
            requestBody:
                description: Node configuration
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NodeConfigurationWithNoId'
            responses:
                200:
                    description: Successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NodeConfiguration"
                400:
                    description: Bad request. Name cannot be null or equal to 'master'.

    /nodes/{nodeId}/report/{monitorId}:
        post:
            tags:
                - nodes
            summary: Post a node record to the database to be evaluated
            parameters:
                -   in: path
                    name: nodeId
                    description: Node id
                    required: true
                    schema:
                        type: integer
                -   in: path
                    name: monitorId
                    description: Monitor id
                    required: true
                    schema:
                        type: integer
            requestBody:
                description: Monitor status object
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/nodeReport"
            responses:
                200:
                    description: Successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NodeMonitorReport"
                404:
                    description: Monitor ID or Node ID does not exist



components:
    schemas:
        NodeMonitorReport:
            type: object
            properties:
                monitor_id:
                    type: number
                    example: 1
                node_id:
                    type: number
                    example: 1
                milliseconds:
                    type: number
                    example: 3
                status:
                    type: boolean
                    example: true
                attempts:
                    type: number
                    example: 1
                statusCode:
                    type: number
                    example: 200
        NodeConfigurationWithNoId:
            type: object
            properties:
                name:
                    type: string
                    example: "Node 1"
        NodeConfiguration:
            type: object
            properties:
                name:
                    type: string
                    example: "Node 1"
                id:
                    type: number
                    example: 1
        MonitorConfiguration:
            type: object
            properties:
                name:
                    type: string
                    example: 'ZGameLogic API'
                type:
                    type: string
                    example: 'API'
                url:
                    type: string
                    example: 'https://zgamelogic.com/health'
                regex:
                    type: string
                    example: 'Healthy'
        MonitorConfigurationWithId:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                name:
                    type: string
                    example: 'ZGameLogic API'
                type:
                    type: string
                    example: 'API'
                url:
                    type: string
                    example: 'https://zgamelogic.com/health'
                regex:
                    type: string
                    example: 'Healthy'
        MonitorConfigurationAndStatus:
            type: object
            properties:
                id:
                    type: integer
                    example: 2
                name:
                    type: string
                    example: 'ZGameLogic Website'
                type:
                    type: string
                    example: 'WEB'
                url:
                    type: string
                    example: 'https://zgamelogic.com/'
                regex:
                    type: string
                    example: 'Welcome'
                status:
                    $ref: '#/components/schemas/status'
        status:
            type: object
            properties:
                "date recorded":
                    type: string
                    example: '2024-05-07 14:00:00'
                milliseconds:
                    type: integer
                    example: 2
                status:
                    type: boolean
                    example: true
                attempts:
                    type: integer
                    example: 1
                "status code":
                    type: integer
                    example: 200
        nodeReport:
            type: object
            properties:
                milliseconds:
                    type: integer
                    example: 2
                status:
                    type: boolean
                    example: true
                attempts:
                    type: integer
                    example: 1
                status_code:
                    type: integer
                    example: 200
